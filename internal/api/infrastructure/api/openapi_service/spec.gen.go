// Package openapi_service provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package openapi_service

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"///Tm75WYS8AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
